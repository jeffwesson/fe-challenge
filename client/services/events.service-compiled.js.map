{"version":3,"sources":["/Users/jeff/WebProjects/fe-challenge/client/services/events.service.es6"],"names":[],"mappings":";;;;AAEA,CAAC,YAAY;AACX,SAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;;AAEjE,eAAa,CAAC,OAAO,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;;AAE3D,WAAS,aAAa,CAAC,cAAc,EAAE,YAAY,EAAE;;AAEnD,QAAI,OAAO,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC;AACzC,QAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAClC,QAAI,OAAO,GAAG,IAAI,CAAC;;;AAGnB,WAAO,CAAC,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;;;AAGrC,WAAO,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;AAClC,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAC;;;AAGF,WAAO,CAAC,SAAS,GAAG,UAAU,OAAO,EAAE;AACrC,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC9B,CAAC;;;AAGF,WAAO,CAAC,WAAW,GAAG,UAAU,OAAO,EAAE;AACvC,aAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC/B,CAAC;;;AAGF,WAAO,CAAC,WAAW,GAAG,UAAU,OAAO,EAAE;AACvC,aAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KACjC,CAAC;;;;;;;;;;;;;;;;;;GAoBH;CACF,CAAA,EAAG,CAAC","file":"events.service-compiled.js","sourcesContent":["/** @author jeffwesson <jeffwesson.github.io> **/\n\n(function () {\n  angular.module('newsie').service('EventsService', EventsService);\n\n  EventsService.$inject = ['$firebaseArray', 'FIREBASE_URI'];\n\n  function EventsService($firebaseArray, FIREBASE_URI) {\n\n    var rootRef = new Firebase(FIREBASE_URI);\n    var ref = rootRef.child('events');\n    var service = this;\n\n    // Firebase node: accounts\n    service.events = $firebaseArray(ref);\n\n    // Create account\n    service.addEvent = function (event) {\n      service.events.$add(event);\n    };\n\n    // Read account\n    service.readEvent = function (eventId) {\n      service.events.$get(eventId);\n    };\n\n    // Update account\n    service.updateEvent = function (eventId) {\n      service.events.$save(eventId);\n    };\n\n    // Delete account\n    service.deleteEvent = function (eventId) {\n      service.events.$remove(eventId);\n    };\n\n\n\n    // Uses static JSON\n    //\n    // get events returns a promise\n    //service.getEvents = function (url = '/models/events.json') {\n    //  return $http.get(url)\n    //    .then(getEventsSuccess)\n    //    .catch(getEventsError);\n    //\n    //  function getEventsSuccess (response) {\n    //    return response.data;\n    //  }\n    //\n    //  function getEventsError (error) {\n    //    console.error('XHR failed for getEvents', error.data);\n    //  }\n    //};\n  }\n})();\n"]}